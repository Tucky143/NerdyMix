modelement.mixin=Mixin
modelement.mixin.name=Create a mixin
modelement.mixin.description=A custom code mod element that is applied as a mixin
modelement.endbiome=End biome
modelement.endbiome.name=Create an end biome
modelement.endbiome.description=An end biome generates a biome in the end dimension
modelement.endstone=Endstone
modelement.endstone.name=Create an endstone
modelement.endstone.description=An endstone is a block that chorus plants can grow on
elementgui.endbiome.biome=Biome element:
elementgui.endbiome.generation=Generation type:
elementgui.endbiome.weight=Biome weight:
elementgui.endbiome.midlands=Surrounding midlands biome:
elementgui.endbiome.barrens=Surrounding barrens biome:
elementgui.endbiome.props_border=Biome properties
elementgui.endbiome.subbiomes_border=Highlands sub-biomes
elementgui.endbiome.needs_biome=You must select a biome element.
elementgui.endbiome.is_end=The selected biome element is already an end biome.
elementgui.endbiome.needs_mixins=You need to have the forge mixins support plugin installed to make an end biome in this generator type.
elementgui.endstone.block=Block to use:
elementgui.endstone.needs_mixins=You need to have the forge mixins support plugin installed to make an endstone in this generator type.
blockly.block.feature_chorus_plant=Chorus plant
modelement.jeirecipetype=JEI recipe type
modelement.jeirecipetype.name=Create a JEI recipe type
modelement.jeirecipetype.description=A custom just enough items recipe type
modelement.jeirecipe=JEI recipe
modelement.jeirecipe.name=Create a JEI recipe
modelement.jeirecipe.description=A custom just enough items recipe
modelement.anvilrecipe=Anvil recipe
modelement.anvilrecipe.name=Create an anvil recipe
modelement.anvilrecipe.description=A custom vanilla anvil recipe
modelement.jeiinformation=JEI information
modelement.jeiinformation.name=Create JEI information
modelement.jeiinformation.description=Information about a group of items, displayed in JEI
elementgui.jeirecipetype.title=Recipe type title:
elementgui.jeirecipetype.icon=Category tab icon:
elementgui.jeirecipetype.crafting_table=Crafting table used:
elementgui.jeirecipetype.background=GUI background image:
elementgui.jeirecipetype.width=Texture width:
elementgui.jeirecipetype.height=Texture height:
elementgui.jeirecipetype.slot_type=Slot type:
elementgui.jeirecipetype.slot_id=Get item from ingredient:
elementgui.jeirecipetype.add_entry=Add GUI slot
elementgui.jeirecipetype.slots=GUI slots
elementgui.jeirecipetype.crafting_empty=You must choose at least one crafting table.
elementgui.jeirecipetype.recipetype_needs_title=The recipe type must have a title.
elementgui.jeirecipetype.missing_texture=The recipe type must have a background texture.
elementgui.jeirecipe.category=Recipe category:
elementgui.jeirecipe.result=Result item:
elementgui.jeirecipe.result_count=Item count:
elementgui.jeirecipe.ingredients=Recipe ingredients
elementgui.jeirecipe.no_category=You must select a category for the recipe.
elementgui.jeirecipe.no_ingredients=The recipe must have ingredients.
elementgui.jeirecipe.no_result=The recipe must have a result.
elementgui.jeirecipe.ingredient_mismatch=The amount of ingredients in the recipe and recipe type don't match.
elementgui.jei.needs_api=The Just enough items API must be enabled in workspace settings to save this mod element.
elementgui.anvilrecipe.left_item=Left anvil slot item:
elementgui.anvilrecipe.right_item=Right anvil slot item:
elementgui.anvilrecipe.right_item_cost=Right slot item cost:
elementgui.anvilrecipe.xp_cost=XP cost:
elementgui.anvilrecipe.output=Recipe output:
elementgui.jeiinformation.info_items=Items to display the information for:
elementgui.jeiinformation.items_info=Description to display:
elementgui.jeiinformation.needs_description=The items must have a description.
elementgui.jeiinformation.needs_items=You need to include items that use the description.
blockly.block.item_list.ingredient=Ingredient
blockly.block.item_list_mutator.container=Recipe ingredients
blockly.block.item_list_mutator.input=Ingredient
blockly.block.get_recipe_result=Get the result of the recipe type %1 from the ingredients:
dialog.selector.recipes.message=Select a recipe type:
blockly.block.play_newgeckoanim=If entity element %1 is the %3 then play the animation %2
blockly.block.stop_procedure=If entity element %1 is the %2 then stop current procedure triggered animation
blockly.category.geckolib=GeckoLib
modelement.animatedblock=Animated Block
modelement.animatedblock.description=A GeckoLib animated block.
elementgui.animatedblock.model=GeckoLib block model:
elementgui.animatedblock.page_blockstates=Blockstates
elementgui.animatedblock.add_blockstate=Add blockstate
elementgui.animatedblock.blockstate=Blockstate
elementgui.animatedblock.blockstate_properties=Blockstate properties
elementgui.animatedblock.modelname=Invalid model!
elementgui.animatedblock.blockstate_texture=Block texture
blockly.block.block_animation=Play animation named %4 to the block at x: %1 y: %2 z: %3
blockly.block.stop_block_animation=Stop any procedure triggered block animation at x: %1 y: %2 z: %3
blockly.block.get_entity_animation=If entity element %1 is the %2 then get current procedure triggered animation
modelement.animateditem=Animated Item
modelement.animateditem.description=A GeckoLib animated item.
elementgui.animateditem.model=GeckoLib item model
elementgui.animateditem.disable_swing=Disable arm swing animation
elementgui.animateditem.modelname=Invalid model!
elementgui.aniblockitems.display_settings_missing=Missing display settings!
elementgui.aniblockitems.display_settings=GeckoLib display settings:
elementgui.aniblockitems.animation_count=Block procedure animations:
elementgui.aniblockitems.animate_blockitem=Animate block item:
blockly.block.item_animation=If item element %1 is the item %3 then play the animation %2
blockly.block.stop_item_animation=If item element %1 is the item %2 then stop current procedure triggered animation
blockly.block.get_item_animation=If item element %1 is the item %2 then get current procedure triggered animation
blockly.block.no_animation=No animation
blockly.block.get_armor_item=Get %1 of animated armor from element registry name %2
blockly.block.set_entity_texture=If entity element %1 is the %2 then set texture to %3
blockly.block.get_entity_texture=If entity element %1 is the %2 then get its texture
blockly.block.is_geckolib_entity=Is %1 a GeckoLib entity
blockly.block.set_armor_animation=If item %3 is part of the armor element %1 then play the animation %2
blockly.block.stop_armor_animation=If item %2 is part of the armor element %1 then stop current procedure triggered animation
dialog.geckolib.error_no_dependency=GeckoLib not found
dialog.geckolib.enable_geckolib=You are attempting to create a GeckoLib element, but it is not enabled in workspace settings. Saving the element without it will cause a build error.
menubar.geckolib=GeckoLib
action.workspace.resources.import_geckolib_model=Import GeckoLib model...
action.workspace.resources.import_display_settings=Import GeckoLib display settings...
action.tutorial=Official plugin tutorial
modelement.animatedentity=Animated Entity
modelement.animatedentity.description=A GeckoLib animated entity.
elementgui.living_entity.condition_solid_bounding_box=Solid bounding box condition
elementgui.animatedentity.modelname=Invalid model!
elementgui.animatedentity.entity_model=<html>Entity model:<br><small>Supported: GECKOLIB
elementgui.animatedentity.animations_page=Animations
elementgui.animatedentity.disable_death_rotation=Disable entity death rotation
elementgui.animatedentity.death_time=Entity death time in ticks
elementgui.animatedentity.idle_required=The entity must have an idle animation!
elementgui.animatedentity.animation_name=Animation name:
elementgui.animatedentity.idle_animation=Idle animation
elementgui.animatedentity.walk_animation=Walking animation
elementgui.animatedentity.death_animation=Death animation
elementgui.animatedentity.attack_animation=Attack animation
elementgui.animatedentity.swim_animation=Swim animation
elementgui.animatedentity.sneak_animation=Sneak animation
elementgui.animatedentity.sprint_animation=Sprint animation
elementgui.animatedentity.flight_animation=Flight animation
elementgui.animatedentity.riding_animation=Riding animation
elementgui.animatedentity.aggression_animation=Aggression animation
elementgui.animatedentity.animations_boarder=Built-In Animations
elementgui.animatedentity.death_animations_boarder=Death Animation Settings
elementgui.animatedentity.extras_boarder=Extra Animations
elementgui.animatedentity.finished_dying=When death time is reached
elementgui.animatedentity.head_movement=Head movement animation
elementgui.animatedentity.attack_interval=Attack animation length in ticks:
elementgui.animatedentity.group_name=Model group name:
elementgui.animatedentity.conditional_animation=Play returned animation
elementgui.animatedentity.lerp=Animation transition ticks
elementgui.animatedentity.baby_model=Child model scale:
elementgui.animatedentity.loop_animation=Loop external animations
elementgui.animatedentity.eye_height=Change entity eye height to:
elementgui.animatedentity.visual_scale=Entity Visual Scale:
elementgui.animatedentity.bounding_box_scale=Bounding Box Scale:
elementgui.animateditem.idle_animation=Idle animation name:
elementgui.animateditem.needs_idle=The item needs an idle animation!
elementgui.animateditem.perspective=Perspective to play animations in:
elementgui.animateditem.first_person=Enable first person arm rendering
elementgui.animateditem.left_arm=Left arm group name:
elementgui.animateditem.right_arm=Right arm group name:
elementgui.animateditem.page_hands=Arm pose
elementgui.animateditem.enable_arm_pose=Enable custom arm pose
elementgui.animateditem.armpose_values=Arm rotation values
elementgui.animateditem.add_arm_entry=Add arm pose
elementgui.animateditem.arm_held=When held in arm:
elementgui.animateditem.swings=Has the arm swinging animation
elementgui.animateditem.arm=Arm to rotate:
elementgui.animateditem.rotation_angle=Rotation angle:
elementgui.animateditem.rotation=Rotation value:
elementgui.animateditem.follows_head=Follows head rotation
elementgui.animateditem.geckolib_model=<html>Item model:<br><small>Select the item model to be used. Supported: GECKOLIB
modelement.animatedarmor=Animated Armor
modelement.animatedarmor.description=A GeckoLib animated set of armor.
elementgui.animatedarmor.geckolib_properties=GeckoLib properties
elementgui.animatedarmor.texture=Armor Texture:
elementgui.animatedarmor.model_name=GeckoLib model:
elementgui.animatedarmor.modelname=Invalid model name!
elementgui.animatedarmor.texture_invalid=A texture must be selected!
elementgui.animatedarmor.idle_required=The armor must have an idle animation!
elementgui.animatedarmor.idle_animation=Idle animation name:
elementgui.animatedarmor.fully_equipped=Only animate while fully equipped
elementgui.animatedarmor.head=Armor model head group name:
elementgui.animatedarmor.chest=Armor model chestplate group name:
elementgui.animatedarmor.right_arm=Armor model right arm group name:
elementgui.animatedarmor.left_arm=Armor model left arm group name:
elementgui.animatedarmor.right_leg=Armor model right leg group name:
elementgui.animatedarmor.left_leg=Armor model left leg group name:
elementgui.animatedarmor.right_boot=Armor model right boot group name:
elementgui.animatedarmor.left_boot=Armor model left boot group name:
dialog.selector.animatedarmor.title=Animated armor selection
dialog.selector.animatedarmor.message=Please select an animated armor:
dialog.selector.animatedentity.title=Animated entity selection
dialog.selector.animatedentity.message=Please select an animated entity:
dialog.selector.animateditem.title=Animated item selection
dialog.selector.animateditem.message=Please select an animated item:
dialogs.convert_to_geckolib=Entity element converter
dialogs.convert_button=Convert to GeckoLib
dialogs.convert_from_geckolib=GeckoLib element converter
dialogs.convert_from_button=Convert to regular Entity
dialog.generator_selector.coverage.animatedentity=GeckoLib placeholder
dialog.generator_selector.coverage.operation=GeckoLib placeholder
dialog.generator_selector.coverage.animatedarmor=GeckoLib placeholder
dialog.generator_selector.coverage.attribute=Attributes
dialog.generator_selector.coverage.animateditem=GeckoLib placeholder
dialog.generator_selector.coverage.slot=GeckoLib placeholder
workspace.3dmodels.delete_selected=Delete selected
workspace.3dmodels.delete_confirm_message=Are you sure you want to delete this file?
elementgui.living_entity.page_visual_and_sound=Visual and sound
elementgui.item.glowcondition=Item glowing condition
elementgui.item.tooltip_tip=Special information:
elementgui.living_entity.min_spawn_group_size=Minimum spawn group size:
elementgui.living_entity.max_spawn_group_size=Maximum spawn group size:
elementgui.living_entity.glow_texture=Entity glowing texture:
elementgui.block.gen_min_height=Minimum generation height:
elementgui.block.gen_max_height=Maximum generation height:
elementgui.block.event_generate_condition=Additional generation condition:
# suppress inspection "TrailingSpacesInProperty" for whole file
# suppress inspection "UnusedProperty" for whole file
blockly.category.curios=Curios API
trigger.curio_equip_return=On curios slot change, return equipped item
trigger.curio_unequip_return=On curios slot change, return unequipped item
blockly.block.is_curioitem=Is %1 a curios bauble
blockly.block.is_curio=Can %1 be equipped in a curios slot
blockly.block.curio_equipped_foreach=For each item %1 in the curios slots of %2 as %3 do %4
blockly.block.is_equipped=Does %1 have a %2 equipped
elementgui.item.condition_glow=Make item glow
elementgui.common.creative_tab=Creative tab
modelement.curiosbauble=Curios Bauble
modelement.curiosbauble.description=A Curios API bauble item.
elementgui.curiosbauble.curio_tick=While bauble is equipped tick
elementgui.curiosbauble.on_equip=When bauble is equipped
elementgui.curiosbauble.on_unequip=When bauble is unequipped
elementgui.curiosbauble.properties=Bauble properties
elementgui.curiosbauble.slot_type=Bauble slot type:
elementgui.curiosbauble.add_slots=Should this bauble add new Curios slots?
elementgui.curiosbauble.slot_amount=Amount of slots of this type to add:
elementgui.curiosbauble.piglins=Make piglins neutral while worn
elementgui.curiosbauble.endermask=Make endermen neutral while worn
elementgui.curiosbauble.has_model=Render a custom model while equipped?
elementgui.curiosbauble.java_model=Custom bauble java model:
elementgui.curiosbauble.model_texture=Custom bauble model texture:
elementgui.curiosbauble.rotate_model=Rotate the model with the player while sneaking
elementgui.curiosbauble.translate_model=Translate the model pose while sneaking
elementgui.curiosbauble.needs_api=Curios API (Adorned) must be enabled in workspace settings to save this element.
modelement.curiosslot=Curios Slot
modelement.curiosslot.description=A custom Curios API slot.
elementgui.curiosslot.slot_name=Slot name:
elementgui.curiosslot.slot_amount=Amount of slots to add:
elementgui.curiosslot.needs_name=The curios slot must have a name.
elementgui.curiosslot.entities=Entities that will have the slot.
modelement.blockstates=Blockstates
modelement.blockstates.name=Create blockstates
modelement.blockstates.description=Blockstates are used to change the model and texture of your blocks
elementgui.blockstates.add_entry=Add blockstate
elementgui.blockstates.model=Block model and particle texture
elementgui.blockstates.blockstate=Blockstate
elementgui.blockstates.block=Block to add blockstates to:
elementgui.blockstates.needs_block=A block element must be selected.
elementgui.blockstates.already_exists=The selected block element already has blockstates.
elementgui.blockstates.needs_blockstates=You must add at least one blockstate.
elementgui.block.block_textures=Block textures
blockly.category.blockstates=Blockstates
blockly.block.block_get_blockstate=Get current blockstate of %2 %1
blockly.block.block_with_blockstate=%1 with blockstate set to %2 %3
blockly.block.block_set_blockstate=Set current blockstate of block at x: %1 y: %2 z: %3 to %4
# suppress inspection "UnusedProperty" for whole file
elementgui.attribute.page.new=Attribute
elementgui.attribute.page.entities=Add to entities
elementgui.attribute.add_entry=Add entity type
elementgui.attribute.entity_list_add=Entites to which to add Attribute
elementgui.attribute.description=In-game attribute name
elementgui.attribute.defaultValue=Default Value
elementgui.attribute.minValue=Minimum Value
elementgui.attribute.maxValue=Maximum Value
elementgui.attribute.isPersistent=Remain after death
elementgui.attribute.border=Attribute Properties
elementgui.attribute.warning.minDefault=The minimal value cannot exceed the default value
elementgui.attribute.warning.maxDefault=The maximal value cannot be lower than the default value
elementgui.attribute.warning.minMax=The minial value cannot exceed the maximal value
modelement.attribute=Attribute
modelement.attribute.description=Create a Custom Attribute
dialog.entity_list_entry.remove_entity=Remove entity type
dialog.selector.attribute.title=Attribute selection
dialog.selector.attribute.message=Please select an attribute
blockly.block.add_modifier=Add modifier %3 of an attribute %1 to an entity %2 as permanent %4 check if has modifier before adding %5 (uncheck if you check it yourself)
blockly.block.remove_modifier=Remove modifier %3 of an attribute %1 from an entity %2 as permanent %4
blockly.block.remove_modifier_uuid=Remove modifier with UUID %3 of an attribute %1 from an entity %2 as permanent %4
blockly.block.create_new_modifier=Create new modifier with UUID %1 named %2 with value %3 and operation %4
blockly.block.get_attribute=Get base value of attribute %1 from %2
blockly.block.get_attribute_from_mod=Get base value of attribute %1 from %2
blockly.block.get_attribute_whole=Get value of attribute %1 from %2
blockly.block.get_attribute_whole_from_mod=Get value of attribute %1 from %2
blockly.block.has_attribute=has entity %1 an attribute %2 
blockly.block.has_attribute_from_mod=has entity %1 an attribute %2 
blockly.block.has_modifier=has entity %2 a modifier %3 of an attribute %1
blockly.block.has_modifier_uuid=has entity %2 a modifier with UUID %3 of an attribute %1
blockly.block.set_attribute=Set base value of attribute %1 of %2 to %3
blockly.block.set_attribute_from_mod=Set base value of attribute %1 of %2 to %3

# Event
trigger.item_attribute_modifier=Calculating Attribute Modifiers
blockly.block.remove_modifier_to_item=Remove modifier %1 of an attribute %2 from an item
blockly.block.remove_modifier_to_item_from_mod=Remove modifier %1 of an attribute %2 from an item
blockly.block.add_modifier_to_item_from_mod=Add modifier %1 of an attribute %2 to an item
blockly.block.add_modifier_to_item=Add modifier %1 of an attribute %2 to an item
blockly.block.event_modifier_slot=For slot %1 do %2

# Deprecated
blockly.block.add_item_modifier=Add or replace modifier %3 of an attribute %1 to an item %2 on slot %4 (REMOVED IN 1.20.6)
